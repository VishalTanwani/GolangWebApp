{{define "base"}}
    <!DOCTYPE html>
    <html lang="en">
        <head>
            <!-- Required meta tags -->
            <meta charset="utf-8" />
            <meta name="viewport" content="width=device-width, initial-scale=1" />

            <!-- Bootstrap CSS -->
            <link
            href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.min.css"
            rel="stylesheet"
            integrity="sha384-KyZXEAg3QhqLMpG8r+8fhAXLRk2vvoC2f3B09zVXn8CA5QIVfZOJ3BCsw2P0p/We"
            crossorigin="anonymous"
            />

            <link
            rel="stylesheet"
            type="text/css"
            href="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.1.4/dist/css/datepicker-bs4.min.css"
            />
            <link
            rel="stylesheet"
            type="text/css"
            href="https://unpkg.com/notie/dist/notie.min.css"
            />
            <link rel="stylesheet" type="text/css" href="/static/css/style.css" />
            <meta http-equiv="X-UA-Compatible" content="ie=edge" />
            <title>My nice page</title>
        </head>
        <body>
            <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
                <div class="container-fluid">
                    <a class="navbar-brand" href="#">Navbar</a>
                    <button
                        class="navbar-toggler"
                        type="button"
                        data-bs-toggle="collapse"
                        data-bs-target="#navbarSupportedContent"
                        aria-controls="navbarSupportedContent"
                        aria-expanded="false"
                        aria-label="Toggle navigation"
                    >
                        <span class="navbar-toggler-icon"></span>
                    </button>
                    <div class="collapse navbar-collapse" id="navbarSupportedContent">
                        <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                            <li class="nav-item">
                                <a class="nav-link active" aria-current="page" href="/">Home</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="/about">About</a>
                            </li>
                            <li class="nav-item dropdown">
                                <a
                                    class="nav-link dropdown-toggle"
                                    href="#"
                                    id="navbarDropdown"
                                    role="button"
                                    data-bs-toggle="dropdown"
                                    aria-expanded="false"
                                >
                                    Rooms
                                </a>
                            <ul class="dropdown-menu" aria-labelledby="navbarDropdown">
                                <li>
                                    <a class="dropdown-item" href="/general-quarters"
                                        >General's Quarters</a
                                    >
                                </li>
                                <li>
                                    <a class="dropdown-item" href="/major-suite">Major's Suite</a>
                                </li>
                            </ul>
                            </li>
                            <li class="nav-item">
                                <a
                                    class="nav-link"
                                    href="/search-availability"
                                    tabindex="-1"
                                    aria-disabled="true"
                                >
                                    Book Now
                                </a>
                            </li>
                            <li class="nav-item">
                                <a
                                    class="nav-link"
                                    href="/contact"
                                    tabindex="-1"
                                    aria-disabled="true"
                                >
                                    Contact
                                </a>
                            </li>
                        </ul>
                    <!-- <form class="d-flex">
                        <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search">
                        <button class="btn btn-outline-success" type="submit">Search</button>
                        </form> -->
                    </div>
                </div>
            </nav>
            {{block "content" .}}

            {{end}}

            <div class="row my-footer">
                <div class="col">first</div>
                <div class="col">middle</div>
                <div class="col">last</div>
            </div>

            <script
                src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.3/dist/umd/popper.min.js"
                integrity="sha384-eMNCOe7tC1doHpGoWe/6oMVemdAVTMs2xqW4mwXrXsW0L84Iytr2wi5v2QjrP/xp"
                crossorigin="anonymous"
            ></script>
            <script
                src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.min.js"
                integrity="sha384-cn7l7gDp0eyniUwwAZgrzD06kc/tftFf19TOAs2zVinnD/C7E91j9yyk5//jjpt/"
                crossorigin="anonymous"
            ></script>
            <script src="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.1.4/dist/js/datepicker-full.min.js"></script>
            <script src="https://unpkg.com/notie"></script>
            <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

            {{block "js" .}}
            
            {{end}}

            <script>
                let myFunc = Prompt();

                (function () {
                    "use strict";

                    // Fetch all the forms we want to apply custom Bootstrap validation styles to
                    var forms = document.querySelectorAll(".needs-validation");

                    // Loop over them and prevent submission
                    Array.prototype.slice.call(forms).forEach(function (form) {
                        form.addEventListener(
                            "submit",
                            function (event) {
                            if (!form.checkValidity()) {
                                event.preventDefault();
                                event.stopPropagation();
                            }

                            form.classList.add("was-validated");
                            },
                            false
                        );
                    });
                })();

                function notify(msg, msgType) {
                    notie.alert({
                    type: msgType,
                    text: msg,
                    });
                }

                function notifyModal(title, text, icon, confirmButtonText) {
                    Swal.fire({
                    title: title,
                    html: text,
                    icon: icon,
                    confirmButtonText: confirmButtonText,
                    });
                }

                {{with .Error}}
                    notify("{{.}}","error")
                {{end}}

                {{with .Flash}}
                    notify("{{.}}","success")
                {{end}}

                {{with .Warning}}
                    notify("{{.}}","warning")
                {{end}}

                function Prompt() {
                    let toast = function (obj) {
                        const { msg = "", icon = "success", position = "top-end" } = obj;

                        const Toast = Swal.mixin({
                            toast: true,
                            position: position,
                            icon: icon,
                            title: msg,
                            showConfirmButton: false,
                            timer: 3000,
                            timerProgressBar: true,
                            didOpen: (toast) => {
                            toast.addEventListener("mouseenter", Swal.stopTimer);
                            toast.addEventListener("mouseleave", Swal.resumeTimer);
                            },
                        });

                        Toast.fire({});
                    };

                    let success = function (obj) {
                        const { msg = "", title = "", footer = "" } = obj;

                        Swal.fire({
                            icon: "success",
                            title: title,
                            text: msg,
                            footer: footer,
                        });
                    };

                    let error = function (obj) {
                        const { msg = "", title = "", footer = "" } = obj;

                        Swal.fire({
                            icon: "error",
                            title: title,
                            text: msg,
                            footer: footer,
                        });
                    };

                    let custom = async function (obj) {
                        const { title = "", html = "" } = obj;
                        const { value: result } = await Swal.fire({
                            title: title,
                            html: html,
                            backdrop: false,
                            focusConfirm: false,
                            showCancelButton: true,
                            focusConfirm: false,
                            willOpen: () => {
                                if(obj.willOpen !== undefined) {
                                    obj.willOpen()
                                }
                            },
                            didOpen: () => {
                                if(obj.didOpen !== undefined) {
                                    obj.didOpen()
                                }
                            },
                            preConfirm: () => {
                                return [
                                    document.getElementById("start").value,
                                    document.getElementById("end").value,
                                ];
                            },
                        });

                        if (result) {
                            if (result.dismiss !== Swal.DismissReason.cancel) {
                                if (result.value !== "") {
                                    if (obj.callback !== undefined) {
                                        obj.callback(result)
                                    }
                                } else {
                                    obj.callback(false)
                                }
                            } else {
                                obj.callback(false)
                            }
                        }
                    };

                    return {
                        toast: toast,
                        success: success,
                        error: error,
                        custom: custom,
                    };
                }
            </script>
        </body>
    </html>

{{end}}
